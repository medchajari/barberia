/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vistas;

import Entidades.Barbero;
import Entidades.CajaBarbero;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import Metodos.BarberoData;
import Metodos.CajaData;
import Metodos.CajaGeneralData;
import Metodos.Conexion;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author MeD
 */
public class AbrirCaja extends javax.swing.JFrame {
 private Conexion con;  
   private Barbero barbero;
   private BarberoData barberoData;
    private CajaGeneralData cajaGeneralData;
   private CajaData cajaData;
    public AbrirCaja() {
        initComponents();
        
        barbero = new Barbero();
         barberoData = new BarberoData();
          cajaGeneralData = new CajaGeneralData();
          cajaData = new CajaData();
          llenarComboBoxBarberos();
          cargarCajasDelDia();
           actualizarTotal();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        cbxBarbero = new javax.swing.JComboBox<>();
        btnAbrirCaja = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableCajas = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        btnActualizar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        txtTotal = new javax.swing.JTextField();
        btnSalir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(1020, 486));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/fondos/2-chica.jpg"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 580, 490));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Caja");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 40, -1, -1));

        jPanel1.add(cbxBarbero, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 100, 240, 40));

        btnAbrirCaja.setText("ABRIR");
        btnAbrirCaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbrirCajaActionPerformed(evt);
            }
        });
        jPanel1.add(btnAbrirCaja, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 100, 110, 40));

        tableCajas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "BARBERO", "TOTAL CAJA", "FECHA"
            }
        ));
        jScrollPane1.setViewportView(tableCajas);
        if (tableCajas.getColumnModel().getColumnCount() > 0) {
            tableCajas.getColumnModel().getColumn(0).setMinWidth(150);
            tableCajas.getColumnModel().getColumn(0).setPreferredWidth(150);
            tableCajas.getColumnModel().getColumn(0).setMaxWidth(150);
            tableCajas.getColumnModel().getColumn(2).setMinWidth(100);
            tableCajas.getColumnModel().getColumn(2).setPreferredWidth(100);
            tableCajas.getColumnModel().getColumn(2).setMaxWidth(100);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 220, 360, 130));

        jLabel3.setText("Seleccione Barbero");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 80, -1, -1));

        btnActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/22/garrapata.png"))); // NOI18N
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });
        jPanel1.add(btnActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 170, 50, 40));

        jLabel4.setText("CAJA GENERAL : ");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 180, -1, -1));

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/22/lupa (1).png"))); // NOI18N
        jPanel1.add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 170, 50, 40));

        txtTotal.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtTotal.setForeground(new java.awt.Color(0, 102, 102));
        jPanel1.add(txtTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 170, 120, 40));

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/32/boton.png"))); // NOI18N
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        jPanel1.add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 360, 110, 50));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
       dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnAbrirCajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbrirCajaActionPerformed
     Barbero barberoSeleccionado = (Barbero) cbxBarbero.getSelectedItem();
    if (barberoSeleccionado != null) {
        int idBarbero = barberoSeleccionado.getIdBarbero();
        CajaData cajaData = new CajaData();
        
        // Abrir caja general y obtener idCajaGeneral
        int idCajaGeneral = cajaData.abrirCajaDelDia(0.0); // Abre la caja general del d√≠a con saldo 0.0 inicial
        
        // Abrir caja del barbero
        cajaData.abrirCajaBarbero(idBarbero, idCajaGeneral);
        
        JOptionPane.showMessageDialog(this, "Caja abierta para el barbero: " + barberoSeleccionado.getNombreBarbero());
    } else {
        JOptionPane.showMessageDialog(this, "Por favor, selecciona un barbero.");
    }
    }//GEN-LAST:event_btnAbrirCajaActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
      llenarComboBoxBarberos();
          cargarCajasDelDia();
           actualizarTotal();
    }//GEN-LAST:event_btnActualizarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AbrirCaja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AbrirCaja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AbrirCaja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AbrirCaja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AbrirCaja().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAbrirCaja;
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JComboBox<Barbero> cbxBarbero;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableCajas;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables


private void llenarComboBoxBarberos() {
    List<Barbero> barb = barberoData.listarBarberos();
    DefaultComboBoxModel<Barbero> model = new DefaultComboBoxModel<>();

    // Agregar un elemento vac√≠o al inicio
    model.addElement(null);

    for (Barbero barbero : barb) {
        model.addElement(barbero);
    }

    cbxBarbero.setModel(model);

    // Configurar el renderizado del JComboBox para mostrar apellido, nombre
    cbxBarbero.setRenderer(new javax.swing.DefaultListCellRenderer() {
        @Override
        public java.awt.Component getListCellRendererComponent(
                javax.swing.JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
            if (value instanceof Barbero) {
                Barbero barbero = (Barbero) value;
                value = barbero.getNombreBarbero()+" "+barbero.getIdBarbero();
                
            } else if (value == null) {
                value = ""; // Mostrar una cadena vac√≠a para el elemento vac√≠o
            }
            return super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
        }
    });
}

private void cargarCajasDelDia() {
    List<CajaBarbero> cajas = cajaData.listarCajasDelDia();

    DefaultTableModel model = (DefaultTableModel) tableCajas.getModel();
    model.setRowCount(0); // Limpiar la tabla

    for (CajaBarbero caja : cajas) {
        Barbero barbero = barberoData.obtenerBarberoPorId(caja.getIdBarbero());
        Object[] rowData = {
            barbero != null ? barbero.getNombreBarbero() : "Desconocido",
            caja.getSaldo(),
            new SimpleDateFormat("dd/MM/yyyy").format(caja.getFecha())
        };
        model.addRow(rowData);
    }
}

private void actualizarTotal() {
    double total = 0.0;
    for (int i = 0; i < tableCajas.getRowCount(); i++) {
        double valor = Double.parseDouble(tableCajas.getValueAt(i, 1).toString());
        total += valor;
    }
    txtTotal.setText(String.valueOf(total));
}


}
