/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vistas;

import Entidades.Producto;
import Entidades.ResultadoBusqueda;
import Metodos.Conexion;
import Metodos.ProductoData;
import java.util.List;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

public class Productos extends javax.swing.JFrame {
private Conexion con;
    private ProductoData productoData;
    public Productos() {
        initComponents();
          con = new Conexion(); // Inicializas la conexión
        productoData = new ProductoData();
        
        
         btnBuscar.addActionListener(new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            String criterioBusqueda = txtBuscar.getText().trim();
            
            if (!criterioBusqueda.isEmpty()) {
                List<ResultadoBusqueda> resultados = productoData.buscarProductoYServicio(criterioBusqueda);
                mostrarResultadosEnTabla(resultados);
            } else {
                JOptionPane.showMessageDialog(null, "Por favor, ingrese un criterio de búsqueda.");
            }
        }
    });
          
          // Listener para el botón de buscar
btnBuscar.addActionListener(new ActionListener() {
    @Override
    public void actionPerformed(ActionEvent e) {
        realizarBusqueda();
    }
});

// Listener para el campo de texto (txtBuscar) para detectar Enter
txtBuscar.addKeyListener(new KeyAdapter() {
    @Override
    public void keyPressed(KeyEvent e) {
        if (e.getKeyCode() == KeyEvent.VK_ENTER) {
            realizarBusqueda();
        }
    }
});



// Agregar un MouseListener a tableBuscar para manejar el doble clic
tableBuscar.addMouseListener(new MouseAdapter() {
    @Override
    public void mouseClicked(MouseEvent e) {
        if (SwingUtilities.isLeftMouseButton(e) && e.getClickCount() == 2) {
            int filaSeleccionada = tableBuscar.getSelectedRow();
            if (filaSeleccionada != -1) {
                // Desactiva la edición en el doble clic
                tableBuscar.clearSelection(); 

                // Obtener los valores de la fila seleccionada
                int idProducto = (int) tableBuscar.getValueAt(filaSeleccionada, 0);
                 String codigoBarra = (String) tableBuscar.getValueAt(filaSeleccionada, 1); // Columna 2: cod
                String marca = (String) tableBuscar.getValueAt(filaSeleccionada, 2); // Columna 2: Marca               
                String descripcion = (String) tableBuscar.getValueAt(filaSeleccionada, 3); // Columna 3: Descripción
                double precio = (double) tableBuscar.getValueAt(filaSeleccionada, 4); // Columna 4: Precio

                // Llenar los campos de texto con los valores obtenidos
               txtID.setText(String.valueOf(idProducto)); 
               txtCod.setText(codigoBarra);
                txtNombre.setText(marca);
                txtDescripcion.setText(descripcion);
                txtPrecio.setText(String.valueOf(precio));
            }
        }
    }
});

    // Configuración de la tabla
    DefaultTableModel modelo = new DefaultTableModel();
    modelo.addColumn("id");
    modelo.addColumn("Tipo");
    modelo.addColumn("Nombre");
    modelo.addColumn("Descripción");
    modelo.addColumn("precio");
    tableBuscar.setModel(modelo);
    
    
DefaultTableModel modeloBuscar = new DefaultTableModel(new Object[]{"id","Tipo", "Nombre", "Descripción", "Precio"}, 0) {
    @Override
    public boolean isCellEditable(int row, int column) {
        return false; // Todas las celdas no son editables
      
    }
};
tableBuscar.setModel(modeloBuscar);

    }



    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnSalir = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        btnModificar = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtDescripcion = new javax.swing.JTextField();
        txtPrecio = new javax.swing.JTextField();
        txtBuscar = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableBuscar = new javax.swing.JTable();
        btnGuardar = new javax.swing.JButton();
        txtID = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtNombre1 = new javax.swing.JTextField();
        jSeparator4 = new javax.swing.JSeparator();
        txtCod = new javax.swing.JTextField();
        fondo = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(1020, 470));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/32/boton.png"))); // NOI18N
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        jPanel1.add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 410, 60, 50));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Codigo de Barras");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 120, -1, -1));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 170, 340, 10));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Descripcion");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 260, -1, -1));
        jPanel1.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 310, 340, 10));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Precio");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 320, -1, 20));
        jPanel1.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 370, 340, 10));

        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/22/edicion.png"))); // NOI18N
        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });
        jPanel1.add(btnModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 410, 120, 50));

        jTextField1.setBackground(new java.awt.Color(153, 204, 255));
        jTextField1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(255, 255, 255));
        jTextField1.setText("  NUEVO PRODUCTO");
        jPanel1.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, 180, 40));

        txtNombre.setBorder(null);
        jPanel1.add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 210, 330, 30));

        txtDescripcion.setBorder(null);
        jPanel1.add(txtDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 280, 340, 30));

        txtPrecio.setBorder(null);
        jPanel1.add(txtPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 350, 340, 30));
        jPanel1.add(txtBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 50, 280, 40));

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/22/lupa (1).png"))); // NOI18N
        jPanel1.add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 50, 100, 40));

        tableBuscar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tableBuscar);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, 530, 270));

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/22/maquinilla-de-afeitar (1).png"))); // NOI18N
        btnGuardar.setText("  Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jPanel1.add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 410, 140, 50));
        jPanel1.add(txtID, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 440, 50, 20));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Marca");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 190, -1, -1));

        txtNombre1.setBorder(null);
        jPanel1.add(txtNombre1, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 210, 330, 30));
        jPanel1.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 240, 340, 10));

        txtCod.setBorder(null);
        jPanel1.add(txtCod, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 142, 340, 30));

        fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/fondos/istockphoto-1192654106-612x612.jpg"))); // NOI18N
        jPanel1.add(fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1020, 470));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Marca");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 190, -1, -1));
        jPanel1.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 240, 340, 10));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
       dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed

     String nombre = txtNombre.getText().trim();
      String codigoBarra = txtCod.getText().trim();
    String descripcion = txtDescripcion.getText().trim();
    double precio = 0.0;
    int idProducto = Integer.parseInt(txtID.getText().trim()); // Asegúrate de tener el ID del producto

    // Validar que los campos no estén vacíos
    if (nombre.isEmpty() || codigoBarra.isEmpty() || txtPrecio.getText().trim().isEmpty() || descripcion.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Todos los campos son obligatorios", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    try {
        // Convertir el texto del campo de precio a un double
        precio = Double.parseDouble(txtPrecio.getText().trim());
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Por favor ingresa un precio válido.", "Error", JOptionPane.ERROR_MESSAGE);
        return; // Salir del método si el precio no es válido
    }

    Producto producto = new Producto();
    producto.setIdProducto(idProducto); // Establece el ID del producto
    producto.setCodigo_barra(codigoBarra);
    producto.setNombre(nombre);
    producto.setPrecio(precio);
    producto.setDescripcion(descripcion);

    // Modificar el producto usando el método en productoData
    boolean resultado = productoData.modificarProducto(producto);

    if (resultado) {
        JOptionPane.showMessageDialog(this, "Producto modificado exitosamente.");
        // Limpiar los campos de texto después de modificar
        txtNombre.setText("");
        txtCod.setText("");
        txtPrecio.setText("");
        txtDescripcion.setText("");
        txtID.setText("");
    } else {
        JOptionPane.showMessageDialog(this, "No se encontró el producto a modificar.", "Error", JOptionPane.ERROR_MESSAGE);
    }

    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
           String nombre = txtNombre.getText().trim();
              String codigoBarra = txtCod.getText().trim();
    String descripcion = txtDescripcion.getText().trim();
    double precio = 0.0;
    
    // Validar que los campos no estén vacíos
    if (nombre.isEmpty() || txtCod.getText().trim().isEmpty() ||txtPrecio.getText().trim().isEmpty() || descripcion.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Todos los campos son obligatorios", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    try {
        // Convertir el texto del campo de precio a un double
        precio = Double.parseDouble(txtPrecio.getText().trim());
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Por favor ingresa un precio válido.", "Error", JOptionPane.ERROR_MESSAGE);
        return; // Salir del método si el precio no es válido
    }

    Producto producto = new Producto();
    producto.setCodigo_barra(codigoBarra);
    producto.setNombre(nombre);
    producto.setPrecio(precio);
    producto.setDescripcion(descripcion);

    // Agregar el producto y obtener el ID generado
    int idProducto = productoData.agregarProducto(producto);

    // Agregar el producto a los locales
    productoData.agregarProductoALocal(idProducto);

    // Limpiar los campos de texto después de agregar
    txtCod.setText("");
    txtNombre.setText("");
    txtPrecio.setText("");
    txtDescripcion.setText("");

    JOptionPane.showMessageDialog(this, "Producto agregado exitosamente.");
    }//GEN-LAST:event_btnGuardarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Productos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Productos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Productos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Productos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Productos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel fondo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTable tableBuscar;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtCod;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JLabel txtID;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNombre1;
    private javax.swing.JTextField txtPrecio;
    // End of variables declaration//GEN-END:variables


private void mostrarResultadosEnTabla(List<ResultadoBusqueda> resultados) {
    DefaultTableModel modelo = (DefaultTableModel) tableBuscar.getModel();
    modelo.setRowCount(0);  // Limpiar la tabla antes de mostrar los nuevos resultados

    for (ResultadoBusqueda resultado : resultados) {
        Object[] fila = {
            resultado.getIdProducto(),
            resultado.getTipo(),
            resultado.getNombre(),
            resultado.getDescripcion(),
            resultado.getPrecio()  
                
        };
        modelo.addRow(fila);
    }
}

private void realizarBusqueda() {
    String criterioBusqueda = txtBuscar.getText().trim();
    
    if (!criterioBusqueda.isEmpty()) {
        List<ResultadoBusqueda> resultados = productoData.buscarProductoYServicio(criterioBusqueda);
        mostrarResultadosEnTabla(resultados);
    } else {
        JOptionPane.showMessageDialog(null, "Por favor, ingrese un criterio de búsqueda.");
    }
}
}
