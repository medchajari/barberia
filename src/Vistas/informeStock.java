/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vistas;

import Entidades.Barbero;
import Entidades.CajaBarbero;
import Entidades.CajaGeneral;
import Entidades.Local;
import Entidades.Stock;
import Metodos.BarberoData;
import Metodos.CajaData;
import Metodos.LocalData;
import Metodos.StockData;
import barberia.Barberia;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author MeD
 */
public class informeStock extends javax.swing.JFrame {

   private Barberia barberia;
   private LocalData localData;
 
    public informeStock() {
        initComponents();
         barberia = new Barberia();
         localData = new LocalData();
         llenarComboBoxBarberias();
        
 

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableStock = new javax.swing.JTable();
        cbxLocal = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        btnMostrar = new javax.swing.JButton();
        ckBarberia = new javax.swing.JCheckBox();
        chkAlmacen = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        fondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(1020, 436));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tableStock.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Marca", "Descripcion", "Almacen", "Local", "Cant", "Title 7"
            }
        ));
        jScrollPane1.setViewportView(tableStock);
        if (tableStock.getColumnModel().getColumnCount() > 0) {
            tableStock.getColumnModel().getColumn(0).setMinWidth(20);
            tableStock.getColumnModel().getColumn(0).setPreferredWidth(20);
            tableStock.getColumnModel().getColumn(0).setMaxWidth(20);
            tableStock.getColumnModel().getColumn(1).setMinWidth(50);
            tableStock.getColumnModel().getColumn(1).setPreferredWidth(50);
            tableStock.getColumnModel().getColumn(1).setMaxWidth(50);
            tableStock.getColumnModel().getColumn(3).setMinWidth(40);
            tableStock.getColumnModel().getColumn(3).setPreferredWidth(40);
            tableStock.getColumnModel().getColumn(3).setMaxWidth(40);
            tableStock.getColumnModel().getColumn(4).setMinWidth(60);
            tableStock.getColumnModel().getColumn(4).setPreferredWidth(60);
            tableStock.getColumnModel().getColumn(4).setMaxWidth(60);
            tableStock.getColumnModel().getColumn(5).setMinWidth(50);
            tableStock.getColumnModel().getColumn(5).setPreferredWidth(50);
            tableStock.getColumnModel().getColumn(5).setMaxWidth(50);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 540, 340));

        cbxLocal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxLocalActionPerformed(evt);
            }
        });
        jPanel1.add(cbxLocal, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 190, 340, 40));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/32/boton.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 290, 150, 60));

        btnMostrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/22/papel.png"))); // NOI18N
        btnMostrar.setText("MOSTRAR");
        btnMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarActionPerformed(evt);
            }
        });
        jPanel1.add(btnMostrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 290, 190, 60));

        ckBarberia.setText("Barberia");
        jPanel1.add(ckBarberia, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 140, -1, -1));

        chkAlmacen.setText("Almacen");
        jPanel1.add(chkAlmacen, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 140, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Mostrar informes de Stock");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 50, -1, -1));

        fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/fondos/78.jpg"))); // NOI18N
        jPanel1.add(fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 450));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cbxLocalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxLocalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxLocalActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarActionPerformed
           StockData stockData = new StockData();
    List<Stock> listaStock;

    if (chkAlmacen.isSelected()) {
        listaStock = stockData.buscarPorAlmacen();
    } else {
        Local localSeleccionado = (Local) cbxLocal.getSelectedItem();
        if (localSeleccionado != null) {
            listaStock = stockData.buscarPorLocal(localSeleccionado.getIdLocal());
        } else {
            listaStock = new ArrayList<>(); // No hay local seleccionado
        }
    }

    llenarTableStock(listaStock);

    }//GEN-LAST:event_btnMostrarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(informeStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(informeStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(informeStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(informeStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new informeStock().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMostrar;
    private javax.swing.JComboBox<Local> cbxLocal;
    private javax.swing.JCheckBox chkAlmacen;
    private javax.swing.JCheckBox ckBarberia;
    private javax.swing.JLabel fondo;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableStock;
    // End of variables declaration//GEN-END:variables



//private void llenarTablaCajas(List<CajaGeneral> cajasGenerales, List<CajaBarbero> cajasBarberos) {
//    DefaultTableModel model = (DefaultTableModel) tablaStock.getModel();
//    model.setRowCount(0); // Limpiar la tabla antes de agregar nuevos datos
//
//    // Llenar con datos de CajaGeneral
//    for (CajaGeneral cajaGeneral : cajasGenerales) {
//        Object[] rowData = {
//            "Caja General",
//            cajaGeneral.getFecha(),
//            cajaGeneral.getSaldo(),
//            "Todos", // Columna vacía para Barbero
//        };
//        model.addRow(rowData);
//    }
//
//    // Llenar con datos de CajaBarbero
//    for (CajaBarbero cajaBarbero : cajasBarberos) {
//        Object[] rowData = {
//            "Caja Barbero",
//            cajaBarbero.getFecha(),
//            cajaBarbero.getSaldo(),
//            cajaBarbero.getNombreBarbero() // Mostrar el nombre del barbero
//        };
//        model.addRow(rowData);
//       
//    }
//}
    
private void llenarTableStock(List<Stock> listaStock) {
    DefaultTableModel model = (DefaultTableModel) tableStock.getModel();
    model.setRowCount(0); // Limpiar la tabla antes de agregar nuevos datos

    for (Stock stock : listaStock) {
        Object[] fila = new Object[6];
        fila[0] = stock.getIdStock(); // ID del stock
        fila[1] = stock.getProducto().getNombre(); // Nombre del producto
        fila[2] = stock.getProducto().getDescripcion();
        fila[3] = stock.getAlmacen() != null ? stock.getAlmacen().getNombre() : "N/A"; // Nombre del almacén
        fila[4] = stock.getLocal() != null ? stock.getLocal().getNombreLocal() : "Almacén Central"; // Nombre del local o almacén
        fila[5] = stock.getCantidad(); // Cantidad del producto
        model.addRow(fila);
    }
}

private void llenarComboBoxBarberias() {
    List<Local> loc = localData.listarLocal();
    DefaultComboBoxModel<Local> model = new DefaultComboBoxModel<>();

    // Agregar un elemento vacío al inicio
    model.addElement(null);

    for (Local local : loc) {
        model.addElement(local);
    }

    cbxLocal.setModel(model);

    // Configurar el renderizado del JComboBox para mostrar apellido, nombre
    cbxLocal.setRenderer(new javax.swing.DefaultListCellRenderer() {
        @Override
        public java.awt.Component getListCellRendererComponent(
                javax.swing.JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
            if (value instanceof Local) {
                Local local = (Local) value;
                value = local.getNombreLocal()+" "+ local.getIdLocal();
                
            } else if (value == null) {
                value = ""; // Mostrar una cadena vacía para el elemento vacío
            }
            return super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
        }
    });
}



}
